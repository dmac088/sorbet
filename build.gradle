/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'io.spring.dependency-management' version "1.0.11.RELEASE"
    id 'org.springframework.boot' version '2.6.1'
    id 'pl.allegro.tech.build.axion-release' version '1.13.6'
    id 'com.palantir.docker' version '0.31.0'
    id 'com.palantir.docker-run' version '0.31.0'
    id 'jp.classmethod.aws.reboot.cloudformation' version '0.45'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}	

dependencies {
    annotationProcessor("org.hibernate:hibernate-jpamodelgen")
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.httpcomponents:httpclient:4.5.10'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE'
    implementation 'org.hibernate:hibernate-validator:6.0.13.Final'
    implementation 'org.hibernate:hibernate-jpamodelgen:5.4.9.Final'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
    implementation 'org.postgresql:postgresql:42.2.8'
    implementation 'org.hibernate:hibernate-search-orm:5.11.7.Final'
    implementation 'org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE'
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.3.8.RELEASE'
    implementation 'org.projectlombok:lombok:1.18.10' 
    implementation 'com.google.guava:guava:20.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.2.2.RELEASE'
    implementation 'org.kie:kie-ci:7.42.0.Final'
    implementation 'org.drools:drools-decisiontables:7.42.0.Final'
    implementation 'org.drools:drools-core:7.42.0.Final'
    implementation 'org.drools:drools-compiler:7.42.0.Final'
    implementation 'org.kie:kie-spring:7.42.0.Final'
    implementation 'org.apache.poi:poi:4.1.2'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.5.3'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.2.2.RELEASE'
    implementation 'com.maxmind.geoip2:geoip2:2.12.0'
    implementation 'com.github.ua-parser:uap-java:1.4.0'
    implementation 'com.vladmihalcea:hibernate-types-52:2.10.0'
    implementation 'org.springframework.boot:spring-boot-starter-cache:2.2.2.RELEASE'
    implementation 'javax.cache:cache-api:1.1.1'
    implementation 'org.ehcache:ehcache:3.8.1'
    implementation 'org.springframework:spring-context-support:5.2.2.RELEASE'
    implementation 'com.googlecode.junit-toolbox:junit-toolbox:1.5'
    implementation 'com.stripe:stripe-java:20.46.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testImplementation 'org.junit.platform:junit-platform-runner:1.5.2'
    testImplementation 'org.springframework.security:spring-security-test:5.2.1.RELEASE'
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
	    exclude group: "com.vaadin.external.google", module:"android-json"
	}
}

configurations.all {
    exclude module: 'slf4j-log4j12'		
}

bootRun {
    environment 'STRIPE_SECRET_KEY', '7'
}

String dockerHubUsernameProperty = 'dannymack'
String imageName = "my-sv2-app"

group = 'io.sv2'
version = '0.0.1'
description = 'Back end application'
java.sourceCompatibility = JavaVersion.VERSION_1_8

docker {
    name imageName
    files "build/libs/${bootJar.archiveFileName.get()}"
    tag 'DockerHub', imageName
}

dockerRun {
    name project.name
    image imageName
    clean true
    env 'STRIPE_SECRET_KEY': 'testkey'
    arguments '--network=host'
}

test {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
}


publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
